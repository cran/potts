
R version 2.9.2 (2009-08-24)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
>  library(potts)
> 
>  set.seed(42)
> 
>  ncolor <- as.integer(4)
>  alpha <- rnorm(ncolor) * 0.01
>  beta <- log(1 + sqrt(ncolor))
>  theta <- c(alpha, beta)
> 
>  nrow <- 25
>  ncol <- 20
>  x <- matrix(1, nrow = nrow, ncol = ncol)
>  foo <- packPotts(x, ncolor)
> 
>  outfun <- function(tt) {
+      qux <- outer(tt, tt)
+      c(tt, qux[lower.tri(qux, diag = TRUE)])
+  }
> 
>  outfun(c(485, 2, 9, 4, 954))
 [1]    485      2      9      4    954 235225    970   4365   1940 462690
[11]      4     18      8   1908     81     36   8586     16   3816 910116
> 
>  out <- potts(foo, theta, nbatch = 5, blen = 3, nspac = 2, debug = TRUE,
+      outfun = outfun)
>  names(out)
 [1] "initial.seed" "final.seed"   "initial"      "final"        "param"       
 [6] "nbatch"       "blen"         "nspac"        "boundary"     "batch"       
[11] "time"         "debug"        "pstate"       "hstate"       "vstate"      
[16] "patch"        "hunif"        "vunif"        "punif"       
> 
>  niter <- out$nbatch * out$blen * out$nspac
> 
>  .Random.seed <- out$initial.seed
>  out.too <- potts(foo, theta, nbatch = niter)
> 
>  tt <- out.too$batch
>  ttaug <- t(apply(tt, 1, outfun))
>  identical(tt, ttaug[ , 1:ncol(tt)])
[1] TRUE
>  nout <- ncol(ttaug)
>  ncol(out$batch) == nout
[1] TRUE
> 
>  ##### check batch means #####
> 
>  foo <- ttaug[seq(1, niter) %% out$nspac == 0, ]
>  foo <- array(as.vector(foo), c(out$blen, out$nbatch, nout))
>  foo <- apply(foo, c(2, 3), mean)
>  identical(foo, out$batch)
[1] TRUE
> 
> 
