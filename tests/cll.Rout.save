
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # needed because of the change in R function "sample" in R-devel
> suppressWarnings(RNGversion("3.5.2"))
> 
> library(potts)
> 
> # simple functionality test
> x <- matrix(rep(1:2, 32), ncol=8)
> t_stat  <- calc_t(x, ncolor=2)
> t_cache <- generate_t_cache(x, ncolor=2, t_stat, length(x), 1, singleton)
> theta   <- rep(1, length(t_stat) - 1)
> t_stat
 1  2  * 
32 32 64 
> 
> composite.ll(theta, t_stat, t_cache)
[1] -52.04875
> gr.composite.ll(theta, t_stat, t_cache)
[1] -14.78775   0.00000
> 
> optim.mple <- optim(theta, composite.ll, gr=gr.composite.ll,
+                     t_stat, t_cache, method="BFGS",
+                     control=list(fnscale=-1))
> # optim.mple$par # should be "close" to c(0,1)
> all.equal(optim.mple$par, 0:1)
[1] TRUE
> 
> set.seed(42)
> 
> ncolor <- as.integer(4)
> beta <- log(1 + sqrt(ncolor))
> theta <- c(rep(0, ncolor), beta)
> nrow <- 32
> ncol <- 32
> 
> # create potts image
> x <- matrix(sample(ncolor, nrow*ncol, replace=TRUE),
+             nrow = nrow, ncol = ncol)
> out <- potts(packPotts(x, ncolor), theta, nbatch=1000, blen=1)
> x <- unpackPotts(out$final)
> 
> # create cache
> t_stat <- calc_t(x, ncolor)
> t_stat
   1    2    3    4    * 
 873   56   38   57 1687 
> t_cache_mple <- generate_t_cache(x, ncolor, t_stat, nrow*ncol, 1, 
+                                  singleton)
> 
> theta.initial <- rep(1, ncolor)
> optim.mple <- optim(theta.initial, composite.ll, gr=gr.composite.ll, 
+                     t_stat, t_cache_mple, method="BFGS", 
+                     control=list(fnscale=-1))
> 
> 
> proc.time()
   user  system elapsed 
  2.475   0.004   2.472 
